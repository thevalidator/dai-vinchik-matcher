/*
 * Copyright (C) 2023 thevalidator
 */
package ru.thevalidator.daivinchikmatcher.handler.impl;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.vk.api.sdk.client.actors.UserActorWithoutId;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.DisplayName;
import ru.thevalidator.daivinchikmatcher.dto.LongPollServerResponse;
import ru.thevalidator.daivinchikmatcher.dto.keyboard.Action;
import ru.thevalidator.daivinchikmatcher.dto.keyboard.Button;
import ru.thevalidator.daivinchikmatcher.gui.AppWindow;
import ru.thevalidator.daivinchikmatcher.notification.Informer;
import ru.thevalidator.daivinchikmatcher.parser.ResponseParser;
import ru.thevalidator.daivinchikmatcher.util.ExceptionUtil;

/**
 *
 * @author thevalidator <the.validator@yandex.ru>
 */
public class HandlerImplTest {

    static ObjectMapper mapper;
    static Informer informer;
    static HandlerImpl instance;

    public HandlerImplTest() {
    }

    @BeforeAll
    public static void setUpClass() {
        UserActorWithoutId actor = new UserActorWithoutId("d23d3c98uuj23djc932cjdu92");
        actor.setUserName("Test User");
        AppWindow window = new AppWindow();
        instance = new HandlerImpl(new HashSet<>(), null, actor);
        mapper = new ObjectMapper();
        informer = new Informer();
        informer.registerObserver((String message) -> {
            System.out.println(message);
        });
        instance.setInformer(informer);
    }

    @AfterAll
    public static void tearDownClass() {
    }

    @BeforeEach
    public void setUp() {
    }

    @AfterEach
    public void tearDown() {
    }
    
    @Test
    @DisplayName("Start task")
    public void testGetAnswerStartTask() {
        try {
            String lastMsgText = "–ê–ª–∏–Ω–∞, 16, –º–æ—Å–∫–≤–∞";
            String kbrdData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";
            List<Button> buttons = ResponseParser.parseButtons(kbrdData);
            String result = instance.getStartMessage(lastMsgText, buttons);
            assertEquals("1", result);
        } catch (JsonProcessingException ex) {
            //Logger.getLogger(HandlerImplTest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Test
    @DisplayName("Mutual like")
    public void testGetAnswerMulualLikeCase() {

        String responseContent = "{\"ts\":1732150034,\"updates\":[[3,1629055,1,-91050183],[7,-91050183,1629055,0],[4,1629056,1,-91050183,1672750548,\"–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –î–æ–±–∞–≤–ª—è–π –≤ –¥—Ä—É–∑—å—è - vk.com/id386179098<br><br>–ú–∞—Ä—Ñ–∞, 23, –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å<br>–ò–º—è –Ω–∞—Å—Ç–æ—è—â–µ–µ, –æ—Ç—á–µ—Å—Ç–≤–æ —Ç–æ–∂–µ)<br>–ú–Ω–µ 19 –ª–µ—Ç, —è –∂–∏–≤—É –≤ –≥–æ—Ä–æ–¥–µ –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª–µ. –£ –º–µ–Ω—è —Å—Ä–µ–¥–Ω–µ–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ+–∫—É—Ä—Å—ã 1–° –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è, —Ä–µ—à–∞—é –≤–æ–ø—Ä–æ—Å —Å —Ä–∞–±–æ—Ç–æ–π. <br> –° –¥–µ—Ç—Å—Ç–≤–∞ —Ö—Ä–æ–º–∞—é –Ω–∞ –æ–¥–Ω—É –Ω–æ–≥—É, –¥–µ—Ç—Å–∫–∞—è —Ç—Ä–∞–≤–º–∞, —ç—Ç–æ –≤–∏–¥–Ω–æ. <br>–ò–≥—Ä–∞—é –Ω–∞ —Ñ–æ—Ä—Ç–µ–ø—å—è–Ω–æ, –ª—é–±–ª—é —á–∏—Ç–∞—Ç—å, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω. –õ—é–±–ª—é –≥–æ—Ç–æ–≤–∏—Ç—å)<br>–õ—é–±–ª—é –≥—É–ª—è—Ç—å –∫–æ–≥–¥–∞ –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –≤—Ä–µ–º—è))) –õ—é–±–ª—é –±–µ—Å–µ–¥–æ–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã)\",{\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvMzg2MTc5MDk4XzQ1NzI4ODUwOQ==\",\"title\":\" ... \"},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457239856\"}],[80,11,0],[4,1629057,1,-91050183,1672750548,\"1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.<br>2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞.<br>3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å.<br>***<br>4. ‚úàÔ∏è –ë–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –î–∞–π–≤–∏–Ω—á–∏–∫ –≤ Telegram.\",{\"emoji\":\"1\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"1\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"2\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"3\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"‚úàÔ∏è 4\"},\"color\":\"default\"}]]}},{}],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("Profile")
    public void testGetAnswerProfileCase() {

        String responseContent = "{\"ts\":1684646234,\"updates\":[[3,1628389,1,-91050183],[7,-91050183,1628389,0],[4,1628390,1,-91050183,1672322118,\"–ò—Ä–∏–Ω–∞, 22, –í–æ—Ä—Å–∏–Ω–æ<br>–ü—Ä–∏–≤–µ—Ç–∏–∫, —Ö–æ—á—É –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ–æ–±—â–∞—Ç—å—Å—è –∞ —Ç–∞–º –∫–∞–∫ –ø–æ–π–¥–µ—Ç –æ–±—â–µ–Ω–∏–µ?.<br>–û —Å–µ–±–µ –∫–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂—É: <br>–Ø –¥–µ–≤–æ—á–∫–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –≤ –∫–æ—Ç–æ—Ä–æ–π –µ—â? –¥–µ—Å—Ç–≤–æ –∏–≥—Ä–∞–µ—Ç.–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–∏—Å–æ–≤–∞—Ç—å, —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏ ^~^–∞–Ω–∏–º–µ—à–∫—É.–û–±–∞–∂–∞—é –∂–∏–≤–æ—Ç–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ –∫–æ—à–µ–∫, —Ç–∞–∫ –∂–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –≤—ã–ø–µ—á–∫–æ–π)).<br>–ü–æ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ ??. <br>–ò–∑ –º—É–∑—ã–∫–∏ –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –†–æ–∫, –ú–µ—Ç–∞–ª–ª –∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —Ö–æ—Ä–æ—à–æ –∑–≤—É—á–∞—â–µ–µ(–Ω—Ä–∞–≤–∏—Ç—Å—è —Ç—É—Å–∏—Ç—å –≤ —Ö–æ—Ä–æ—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏,–Ω–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è?). <br>–ú–æ—è –º–µ—á—Ç–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ –º–∏—Ä—É –∏ –æ–¥–Ω–∞–∂–¥—ã —Å–ª–µ—Ç–∞—Ç—å –≤ –Ø–ø–æ–Ω–∏—é.???\",{\"emoji\":\"1\",\"content_source\":\"lgECApPODmt2LM4Oa3YszSmMA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457239550\"}],[80,12,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Profile2")
    public void testGetAnswerProfileCase2() {

        String responseContent = "{\"ts\":1785440190,\"updates\":[[3,4216918,1,-91050183],[6,-91050183,4216918,0],[4,4216919,3,-91050183,1674135767,\"3\",{\"title\":\" ... \"},{}],[80,28,0],[3,4216919,1,-91050183],[7,-91050183,4216919,0],[4,4216920,1,-91050183,1674135767,\"–ü–æ–ª–∏–Ω–∞, 15, üìç–ú–æ—Å–∫–≤–∞\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNjEyMjMxMDczXzQ1NzI1NTk3Mw==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"527463828_457319251\"}],[80,29,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (Exception ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Profile3")
    public void testGetAnswerProfileCase3() {

        String responseContent = "{\"ts\":1836825949,\"updates\":[[3,487,1,-91050183],[6,-91050183,487,0],[4,488,3,-91050183,1674385070,\"3\",{\"title\":\" ... \"},{}],[80,1,0],[3,488,1,-91050183],[7,-91050183,488,0],[4,489,1,-91050183,1674385070,\"–í–∏–∫—Ç–æ—Ä–∏—è, 24, –ú–æ—Å–∫–≤–∞<br>–ú–Ω–µ –º–Ω–æ–≥–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ...<br>–ú—É–∑—ã–∫–∞, —Å–ø–æ—Ä—Ç, –π–æ–≥–∞,—Ç–∞–Ω—Ü—ã, —Ä–∏—Å–æ–≤–∞–Ω–∏–µ, —Ñ–∏–ª—å–º—ã, —Å–µ—Ä–∏–∞–ª—ã, —Ñ–µ—Å—Ç–∏–≤–∞–ª–∏, –∫–æ–Ω—Ü–µ—Ä—Ç—ã, —Ç—É—Å–æ–≤–∫–∏ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–µ(–º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å—ã –ø–æ —Ç–∞–Ω—Ü–∞–º, –¥–∂–µ–º(–∏–º–ø—Ä–æ–≤–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º—É–∑—ã–∫–∞)), —Ñ–µ—Ö—Ç–æ–≤–∞–Ω–∏–µ,—Å—Ç—Ä–µ–ª—å–±–∞ –∏–∑ –ª—É–∫–∞,–º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å—ã —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏ —Ç–¥. <br>–Ø –Ω–µ –ø—å—é, –Ω–µ –∫—É—Ä—é.<br>–•–æ—á—É –ø–æ–æ–±—â–∞—Ç—å—Å—è ‚ú®\",{\"emoji\":\"1\",\"content_source\":\"lgECApPOGMCkbs4YwKRuzcAiA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"778875451_457239213\"}],[80,2,0],[52,11,-91050183,0],[3,332,1,716059501],[7,716059501,332,0],[61,716059501,1],[4,490,1,716059501,1674385087,\"üôè\",{\"emoji\":\"1\",\"title\":\" ... \"},{}],[80,3,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (Exception ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Profile4")
    public void testGetAnswerProfileCase4() {

        String responseContent = "{\"ts\":1714379528,\"updates\":[[3,6607,1,-91050183],[6,-91050183,6607,0],[4,6608,3,-91050183,1674396640,\"3\",{\"title\":\" ... \"},{}],[80,24,0],[3,6608,1,-91050183],[7,-91050183,6608,0],[4,6609,1,-91050183,1674396640,\"–î–∏–º–∞, 20, –ú–æ—Å–∫–≤–∞<br>–ú–Ω–µ 17\",{\"content_source\":\"lgECApPOHMYfwM4cxh\\/AzaHgA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"364392412_457239140\"}],[80,25,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (Exception ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Mutual like message")
    public void testGetAnswerMutualLikeCase1() {

        String responseContent = "{\"ts\":1836825567,\"updates\":[[3,398,1,-91050183],[6,-91050183,398,0],[80,0,0],[4,399,3,-91050183,1674384256,\"1\",{\"title\":\" ... \"},{}],[3,399,1,-91050183],[7,-91050183,399,0],[4,400,1,-91050183,1674384257,\"–û—Ç–ª–∏—á–Ω–æ! –ù–∞–¥–µ—é—Å—å —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ–¥–µ—Ç–µ –≤—Ä–µ–º—è ;) –¥–æ–±–∞–≤–ª—è–π –≤ –¥—Ä—É–∑—å—è - vk.com\\/id218648185\",{\"title\":\" ... \"},{}],[80,1,0],[4,401,1,-91050183,1674384257,\"–≠—Ç–æ –≤—Å–µ, –∏–¥–µ–º –¥–∞–ª—å—à–µ?\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\"},\"color\":\"positive\"}],[{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\"},\"color\":\"default\"}]]}},{}],[52,11,-91050183,0],[3,400,1,-91050183],[6,-91050183,400,1],[3,401,1,-91050183],[6,-91050183,401,0],[80,0,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (Exception ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Mutual like message 2")
    public void testGetAnswerMutualLikeCase2() {

        String responseContent = "{\"ts\":1625883660,\"updates\":[[3,1179,1,-91050183],[6,-91050183,1179,0],[4,1180,3,-91050183,1674415390,\"1\",{\"title\":\" ... \"},{}],[80,7,0],[3,1180,1,-91050183],[7,-91050183,1180,0],[4,1181,1,-91050183,1674415390,\"–û—Ç–ª–∏—á–Ω–æ! –ù–∞–¥–µ—é—Å—å —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ–¥–µ—Ç–µ –≤—Ä–µ–º—è ;) –¥–æ–±–∞–≤–ª—è–π –≤ –¥—Ä—É–∑—å—è - vk.com\\/id603666502\",{\"title\":\" ... \"},{}],[80,8,0],[4,1182,1,-91050183,1674415390,\"–≠—Ç–æ –≤—Å–µ, –∏–¥–µ–º –¥–∞–ª—å—à–µ?\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\"},\"color\":\"positive\"}],[{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\"},\"color\":\"default\"}]]}},{}],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (Exception ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Mutual like message 3")
    public void testGetAnswerMutualLikeCase3() {

        String responseContent = "{\"ts\":1625884417,\"updates\":[[4,1349,3,-91050183,1674417614,\"1\",{\"title\":\" ... \"},{}],[3,1349,1,-91050183],[7,-91050183,1349,0],[4,1350,1,-91050183,1674417614,\"–û—Ç–ª–∏—á–Ω–æ! –ù–∞–¥–µ—é—Å—å —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ–¥–µ—Ç–µ –≤—Ä–µ–º—è ;) –¥–æ–±–∞–≤–ª—è–π –≤ –¥—Ä—É–∑—å—è - vk.com\\/id506090967\",{\"title\":\" ... \"},{}],[80,8,0],[4,1351,1,-91050183,1674417615,\"–≠—Ç–æ –≤—Å–µ, –∏–¥–µ–º –¥–∞–ª—å—à–µ?\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\"},\"color\":\"positive\"}],[{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\"},\"color\":\"default\"}]]}},{}],[52,11,-91050183,0],[3,1351,1,-91050183],[3,1350,1,-91050183],[6,-91050183,1351,0],[80,7,0]]}";
        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (Exception ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("Advertisements")
    public void testGetAnswerAdvertisementCase() {

        String responseContent = "{\"ts\":1684646234,\"updates\":[[4,1628390,1,-91050183,1672322118,\"–í—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç—ã –∏—Å—Ç–µ–∫–ª–æ, –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.<br><br>–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –î–∞–π–≤–∏–Ω—á–∏–∫ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Telegram –∏ VK.<br>–¢—ã –º–æ–∂–µ—à—å –≤ –æ–¥–∏–Ω –∫–ª–∏–∫ –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ü–µ–Ω–∫–µ –∞–Ω–∫–µ—Ç –≤ Telegram –∏ —Ç–∞–∫ –∂–µ –±—ã—Å—Ç—Ä–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ VK.\",{\"emoji\":\"1\",\"content_source\":\"lgECApPODmt2LM4Oa3YszSmMA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"–ê–Ω–∫–µ—Ç—ã –≤ Telegram\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã –≤ VK\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457239550\"}],[80,12,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("2", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("No text in profile case")
    public void testGetAnswerNoTextInProfilleWarnCase() {

        String responseContent = "{\"ts\":1684646243,\"updates\":[[3,1628391,1,-91050183],[7,-91050183,1628391,0],[4,1628392,1,-91050183,1672322219,\"–í—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç—ã –∏—Å—Ç–µ–∫–ª–æ, –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.<br><br>–í —Ç–≤–æ–µ–π –∞–Ω–∫–µ—Ç–µ —Å–æ–≤—Å–µ–º –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ –∏—â–µ—à—å, –º—ã —Å–º–æ–∂–µ–º –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –ø–∞—Ä—É.<br><br>1. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –ø—É—Å—Ç—ã–º.<br>2. –ù–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É.\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"1\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"2\"},\"color\":\"default\"}]]}},{}],[80,12,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("Liked by someone")
    public void testGetAnswerIsLikedBySomeOneCase() {

        String responseContent = "{\"ts\":1824067397,\"updates\": [[4,28385,1,-91050183,1673608136,\"–¢—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å 1 —á–µ–ª–æ–≤–µ–∫—É, –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ?\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"üëç\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{}],[52,11,-91050183,0],[3,28385,1,-91050183],[3,28384,1,-91050183],[6,-91050183,28385,0],[80,2,0],[3,28386,1,-91050183],[7,-91050183,28386,0],[80,3,0],[52,11,-91050183,0],[3,28387,1,-91050183],[6,-91050183,28387,0],[80,2,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Liked by someone")
    public void testGetAnswerIsLikedBySomeOneCase2() {

        String responseContent = "{\"ts\":1625884395,\"updates\":[[3,1341,1,-91050183],[7,-91050183,1341,0],[4,1342,1,-91050183,1674417232,\"–¢—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å 1 –ø–∞—Ä–Ω—é, –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ?\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"üëç\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{}],[80,8,0],[52,11,-91050183,0],[4,1343,1,-91050183,1674417296,\"–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –Ω–∞–ø–∏—à–∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É\",{\"title\":\" ... \"},{}],[3,1343,1,-91050183],[3,1342,1,-91050183],[6,-91050183,1343,0],[4,1344,3,-91050183,1674417565,\"1\",{\"title\":\" ... \"},{}],[80,7,0],[3,1344,1,-91050183],[7,-91050183,1344,0],[4,1345,1,-91050183,1674417566,\"–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞(–∏ –µ—â–µ 1):<br><br>üß¢, 18, –ú–æ—Å–∫–≤–∞<br>ü¶ã –ò—â—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π, –æ–±—â–µ–Ω–∏–µ –∏ —Ç.–¥ <br><br>  ‚Ä¢ –Ø –µ—â—ë –ø–∏—à—É –º—É–∑—ã–∫—É, –≤ —Å—Ç–∏–ª—è—Ö —Ö–æ—Ä—Ä–æ—Ä, —Ç—Ä–µ–ø –º–µ—Ç–∞–ª–ª, Drill, Detroit, Hyperpop, –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –∏ –∑–≤—É—á–∞–Ω–∏–µ) <br><br> ‚Ä¢ –ù–∞ –º–æ–π –ñ–∞–Ω—Ä –º–µ–Ω—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç : <br><br>Sagath, Fatal - m, –ù–û–ö–¢–£, <br>163onmyneck, Heronwater, midix. <br><br> ‚Ä¢ –ï—â—ë —É –Ω–∞—Å –µ—Å—Ç—å –±–µ—Å–µ–¥–∞) –≤ —ç—Ç–æ –±–µ—Å–µ–¥–µ üëá<br><br>üíé - –õ—é–±—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è <br>üíé - –ï–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏ <br>üíé - –æ–±—â–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã       <br>üíé - –æ–±—â–∏–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è<br>üíé - –¥—Ä—É–∂–±–∞ <br><br>–¢–∞–∫ –∂–µ —è —Å–æ–∑–¥–∞–ª –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ UNICORN MUSIC –¥–ª—è –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤ —Å —Ç–æ–ø–æ–≤—ã–º —Å–∞—É–Ω–¥–æ–º, –µ—Å–ª–∏ —Ç—ã –±–∏—Ç–º–µ–π–∫–µ—Ä –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å, –∏ —Ö–æ—á–µ—à—å —Å –∫–µ–º —Ç–æ –¥–≤–∏–≥–∞—Ç—å—Å—è, –ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É —Å –ø–æ–º–µ—Ç–∫–æ–π (UNICORN) –∏ –∫–∏–¥–∞–π —Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã üòÅ\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNjUyNzY1NDcxXzQ1NzI1MTI3OA==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"–∂–∞–ª–æ–±–∞\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"522772219_457239481\"}],[80,8,0],[52,11,-91050183,0],[3,1345,1,-91050183],[6,-91050183,1345,0],[80,7,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Liked by someone message after profile")
    public void testGetAnswerIsLikedBySomeOneSeparateMessageCase() {

        String responseContent = "{\"ts\":1785441298,\"updates\":[[3,4217159,1,-91050183],[6,-91050183,4217159,0],[4,4217160,3,-91050183,1674138958,\"1\",{\"title\":\" ... \"},{}],[80,30,0],[3,4217160,1,-91050183],[7,-91050183,4217160,0],[4,4217161,1,-91050183,1674138958,\"–ù–∞–¥—è, 16, –ú–æ—Å–∫–≤–∞<br>–ü—Ä–∏–≤–µ—Ç–∏–∫:) <br>–Ø –Ω–µ –∏–∑ –ú–æ—Å–∫–≤—ã, –ø—Ä–æ—Å—Ç–æ –∏—â—É —Å –∫–µ–º –ø–æ–æ–±—â–∞—Ç—å—Å—èüòÉ\",{\"emoji\":\"1\",\"content_source\":\"lgECApPOJc7G5s4lzsbmzU6OA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"527463828_457319354\"}],[80,31,0],[52,11,-91050183,0],[4,4217162,1,-91050183,1674138977,\"–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞! –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Å –≤–æ–ø—Ä–æ—Å–æ–º –≤—ã—à–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –∫—Ç–æ —ç—Ç–æ\",{\"title\":\" ... \"},{}]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

//    @Test
//    @DisplayName("Too many likes")
//    public void testGetAnswerTooManyLikesCase() {
//
//        String responseContent = "{\"ts\":1867400668,\"updates\":[[3,28920,1,-91050183],[6,-91050183,28920,0],[4,28921,3,-91050183,1673619862,\"1\",{\"title\":\" ... \"},{}],[80,3,0],[3,28921,1,-91050183],[7,-91050183,28921,0],[4,28922,1,-91050183,1673619862,\"–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ª–∞–π–∫–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è ‚Äì —Å—Ç–∞–≤—å –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è. –ó–∞–≥–ª—è–Ω–∏ –∫ –Ω–∞–º –ø–æ–ø–æ–∑–∂–µ<br><br>1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.<br>2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞.<br>3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å.<br>***<br>4. ‚úàÔ∏è –ë–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –î–∞–π–≤–∏–Ω—á–∏–∫ –≤ Telegram.\",{\"emoji\":\"1\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"1\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"2\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"3\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"‚úàÔ∏è 4\"},\"color\":\"default\"}]]}},{}],[80,4,0],[52,11,-91050183,0]]}";
//
//        try {
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            String result = instance.getAnswerMessage(dto.getUpdates());
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }
    @Test
    @DisplayName("Sleeping state")
    public void testGetAnswerIsSleepingStateCase() {

        String responseContent = "{\"ts\":1867400668,\"updates\":[[3,28920,1,-91050183],[6,-91050183,28920,0],[4,28921,3,-91050183,1673619862,\"1\",{\"title\":\" ... \"},{}],[80,3,0],[3,28921,1,-91050183],[7,-91050183,28921,0],[4,28922,1,-91050183,1673619862,\"1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.<br>2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞.<br>3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å.<br>***<br>4. ‚úàÔ∏è –ë–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –î–∞–π–≤–∏–Ω—á–∏–∫ –≤ Telegram.\",{\"emoji\":\"1\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"1\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"2\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"3\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"‚úàÔ∏è 4\"},\"color\":\"default\"}]]}},{}],[80,4,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
//
//    @Test
//    @DisplayName("New profiles want to meet")
//    public void testGetAnswerNewProfilesWantToMeetCase() {
//
//        String responseContent = "{\"ts\":1824067397,\"updates\": }";
//
//        try {
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            String result = instance.getAnswerMessage(dto.getUpdates());
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }
//
    @Test
    @DisplayName("Location")
    public void testGetAnswerLocationCase() {

        String responseContent = "{\"ts\":1850291255,\"updates\":[[4,1632177,3,-91050183,1674344484,\"3\",{\"title\":\" ... \"},{}],[3,1632177,1,-91050183],[7,-91050183,1632177,0],[4,1632178,1,-91050183,1674344484,\"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —É–≤–∏–¥–∏—à—å –∫—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—è–¥–æ–º\",{\"title\":\" ... \"},{}],[80,6,0],[52,11,-91050183,0],[3,1632178,1,-91050183],[6,-91050183,1632178,0],[80,5,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
//
//    @Test
//    @DisplayName("")
//    public void testGetAnswer() {
//
//        String responseContent = "{\"ts\":1824067397,\"updates\": }";
//
//        try {
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            String result = instance.getAnswerMessage(dto.getUpdates());
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }

    @Test
    @DisplayName("Advise case")
    public void testGetAnswerAdviseCase() {

        String responseContent = "{\"ts\":1824067397,\"updates\": [[3,33445,1,-91050183],[7,-91050183,33445,0],[4,33446,1,-91050183,1673801926,\"–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –º–æ–∂–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤.<br><br>–ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –∞–Ω–∫–µ—Ç–µ.<br><br>1. –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∞–Ω–∫–µ—Ç—ã.<br>2. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"1\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"2\"},\"color\":\"default\"}]]}},{}],[80,5,0],[52,11,-91050183,0],[62,460732329,9],[4,33447,2629633,2000000009,1673801929,\"–¥–∞–π –ê–ª–ª–∞—Ö —Ç–µ–±–µ —Å–∏–ª –ø–µ—Ä–µ–¥ –æ—Ç—Ü–æ–º\",{\"from\":\"495279354\",\"mentions\":[354581371],\"marked_users\":[[1,[354581371]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30356}\",\"fwd\":\"0_0\"}],[3,33446,1,-91050183],[6,-91050183,33446,0],[80,4,0],[62,460732329,9],[4,33448,532481,2000000009,1673801932,\"—Ç–µ–±–µ –ø–∏–∑–¥–∞\",{\"from\":\"495279354\"},{}],[4,33449,2629633,2000000009,1673801936,\"–¢–µ–±–µ –ø–∏–∑–¥–∞ –±—Ä–∞—Ç\",{\"from\":\"460732329\",\"mentions\":[354581371],\"marked_users\":[[1,[354581371]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30356}\",\"fwd\":\"0_0\"}]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("2", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("Someone liked your profile msg after profile")
    public void testGetAnswerSomeoneLikedYourProfileCase() {

        String responseContent = "{\"ts\":1824067397,\"updates\": [[3,5452,1,-91050183],[6,-91050183,5452,0],[4,5455,3,-91050183,1673811983,\"3\",{\"title\":\" ... \"},{}],[80,2,0],[3,5455,1,-91050183],[7,-91050183,5455,0],[4,5456,1,-91050183,1673811983,\"–°—Ç–∞—Å–∏–∫, 17, –ú–æ—Å–∫–≤–∞<br>–ë–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –≤—Å–æ –≤ –ª—Å\",{\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTQ5MjQzNTg4XzQ1NzI0NjcxNA==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"748996382_457241026\"}],[80,3,0],[52,11,-91050183,0],[64,2000000002,[741029110],1,1673811983],[4,5457,2629633,2000000002,1673811984,\"–ú–∞–º\",{\"from\":\"690698378\",\"mentions\":[709121760],\"marked_users\":[[1,[709121760]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30904}\",\"fwd\":\"0_0\"}],[62,618730625,2],[4,5458,2629633,2000000002,1673811985,\"–¢—ã —Å–µ–±–µ —Ä–µ–∞–ª—å–Ω–æ –∂–µ–Ω—É –∏—â–µ—à—å?\",{\"from\":\"618730625\",\"mentions\":[741029110],\"marked_users\":[[1,[741029110]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30902}\",\"fwd\":\"0_0\"}],[4,5459,2629633,2000000002,1673811989,\"\",{\"from\":\"741029110\"},{\"attach1_type\":\"doc\",\"attach1\":\"741029110_652774295\",\"attach1_kind\":\"audiomsg\",\"reply\":\"{\\\"conversation_message_id\\\":30903}\",\"attachments\":\"[{\\\"type\\\":\\\"audio_message\\\",\\\"audio_message\\\":{\\\"id\\\":\\\"652774295\\\",\\\"owner_id\\\":\\\"741029110\\\",\\\"duration\\\":4,\\\"waveform\\\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,8,2,2,16,13,2,16,0,8,31,10,26,11,10,27,0,14,2,8,0,0,0,0,0,0,0,0,0,0,5,0,1,3,0,0,1,13,15,2,9,6,13,3,1,2,19,3,6,2,0,0,0,4,5,6,3,3,5,0,1,10,4,10,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\\"link_ogg\\\":\\\"https://psv4.userapi.com/s/v1/amsg/R7RV7me-juMUB9A9pszFmV3jKplFx013pnotdSkSAuqSzp-Qz3Rc13CmegSGdQaSmDlD.ogg\\\",\\\"link_mp3\\\":\\\"https://psv4.userapi.com/s/v1/amsg/-ZECsIFjN53AUCGV08kzwuy0fnZkO4sMg6_bVClvv4G4YJGZ8x00NPg_jQilZs01tKgh.mp3\\\",\\\"locale\\\":\\\"\\\",\\\"is_recognized\\\":0,\\\"access_key\\\":\\\"VAXOZBgkMJfSlVWdwWOfx2ZfVXuAfzY09LX7zV4xRwD\\\",\\\"transcript\\\":\\\"–Ø —ç—Ç–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –º–æ–∂–Ω–æ.\\\",\\\"transcript_state\\\":\\\"done\\\"}}]\",\"attachments_count\":\"1\",\"fwd\":\"0_0\"}],[62,690698378,2],[62,618730625,2],[5,5459,2629633,2000000002,1673811989,\"\",{\"from\":\"741029110\"},{\"attach1_type\":\"doc\",\"attach1\":\"741029110_652774295\",\"attach1_kind\":\"audiomsg\",\"reply\":\"{\\\"conversation_message_id\\\":30903}\",\"attachments\":\"[{\\\"type\\\":\\\"audio_message\\\",\\\"audio_message\\\":{\\\"id\\\":\\\"652774295\\\",\\\"owner_id\\\":\\\"741029110\\\",\\\"duration\\\":4,\\\"waveform\\\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,8,2,2,16,13,2,16,0,8,31,10,26,11,10,27,0,14,2,8,0,0,0,0,0,0,0,0,0,0,5,0,1,3,0,0,1,13,15,2,9,6,13,3,1,2,19,3,6,2,0,0,0,4,5,6,3,3,5,0,1,10,4,10,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\\"link_ogg\\\":\\\"https://psv4.userapi.com/s/v1/amsg/R7RV7me-juMUB9A9pszFmV3jKplFx013pnotdSkSAuqSzp-Qz3Rc13CmegSGdQaSmDlD.ogg\\\",\\\"link_mp3\\\":\\\"https://psv4.userapi.com/s/v1/amsg/-ZECsIFjN53AUCGV08kzwuy0fnZkO4sMg6_bVClvv4G4YJGZ8x00NPg_jQilZs01tKgh.mp3\\\",\\\"locale\\\":\\\"\\\",\\\"is_recognized\\\":0,\\\"access_key\\\":\\\"VAXOZBgkMJfSlVWdwWOfx2ZfVXuAfzY09LX7zV4xRwD\\\",\\\"transcript\\\":\\\"–Ø —ç—Ç–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –º–æ–∂–Ω–æ.\\\",\\\"transcript_state\\\":\\\"done\\\"}}]\",\"attachments_count\":\"1\",\"fwd\":\"0_0\"}],[4,5460,1,-91050183,1673811991,\"–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞! –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Å –≤–æ–ø—Ä–æ—Å–æ–º –≤—ã—à–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –∫—Ç–æ —ç—Ç–æ\",{\"title\":\" ... \"},{}],[4,5461,532481,2000000002,1673811992,\"–¢—É—Ç —Ç—É—Å—ã –ø–æ —Ä–µ–ø–æ—Å—Ç—É 14+\",{\"from\":\"618730625\"},{}],[4,5462,2629633,2000000002,1673811994,\"–î–∞–∞\",{\"from\":\"741029110\",\"mentions\":[618730625],\"marked_users\":[[1,[618730625]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30906}\",\"fwd\":\"0_0\"}],[62,690698378,2],[52,19,2000000002,1],[19,4938,0],[4,5463,2629633,2000000002,1673811997,\"–ê–•–ê–•–ê–•–ê–•\",{\"from\":\"690698378\",\"mentions\":[618730625],\"marked_users\":[[1,[618730625]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30908}\",\"fwd\":\"0_0\"}],[62,741029110,2],[62,741029110,2],[52,19,2000000002,1],[19,4938,0],[52,19,2000000002,1],[19,4938,0],[52,19,2000000002,1],[19,4938,0],[62,741029110,2],[4,5464,2629633,2000000002,1673812012,\"–û—Å—Ç–∞–≤—å\",{\"from\":\"601753472\",\"mentions\":[741029110],\"marked_users\":[[1,[741029110]]]},{\"reply\":\"{\\\"conversation_message_id\\\":30909}\",\"fwd\":\"0_0\"}],[4,5465,532481,2000000002,1673812014,\"–ë—Ä–∞—Ç\",{\"from\":\"601753472\"},{}],[10,2000000002,16777216],[2,4938,131200,2000000002],[52,19,2000000002,0],[4,5466,532481,2000000002,1673812015,\"\",{\"from\":\"495279354\"},{\"attach1_call_initiator_id\":\"495279354\",\"attach1_call_receiver_id\":\"2000000703\",\"attach1_call_state\":\"reached\",\"attach1_call_duration\":\"2717\",\"attach1_call_participants\":\"[495279354,709121760,700885990,397386871,756682729,668722446,673107487,284125714,597418209,587606778,541170203,732597811,707685424,688440925,733079945,568771615,574417931,455730361,747258525,244357386,583821919,685244867,606863977,354581371,539550804,400038024,399937,242599152,741029110,745007556,500496742,460732329,339295212,618730625,679713503,672669597]\",\"attach1_call_participants_count\":\"36\",\"attach1_type\":\"call\",\"attach1\":\"495279354_0\",\"attach1_kind\":\"group_call\"}]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage() {

        String text = "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ª–∞–π–∫–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è ‚Äì —Å—Ç–∞–≤—å –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è. –ó–∞–≥–ª—è–Ω–∏ –∫ –Ω–∞–º –ø–æ–ø–æ–∑–∂–µ<br><br>1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.<br>2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞.<br>3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å.<br>***<br>4. ?? –ë–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –î–∞–π–≤–∏–Ω—á–∏–∫ –≤ Telegram.";
        String buttonsData = "[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"1\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"2\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"3\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?? 4\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(null, null, null);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    public void testGetStartMessage2() {

        String text = "–ú–∞—Ä–∏—è, 16, –ú–æ—Å–∫–≤–∞";
        String buttonsData = "[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage3() {

        String text = "–ù–∞—Å—Ç—è, 19, –ú–æ—Å–∫–≤–∞\n–ü—Ä–∏–≤–µ—Ç–∏–∫, –∏—â—É –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–µ–ª–æ–≤–µ—á–∫–æ–≤ –≤ –º–æ—é –±–µ—Å–µ–¥—É‚ÄºÔ∏è\n–°—Ç—Ä–æ–≥–æ –ú–æ—Å–∫–≤–∞, —Å—Ç—Ä–æ–≥–æ –æ—Ç 16+ (15—Ç–∏ –ª–µ—Ç–Ω–∏–µ –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ —Å—Ö–æ–¥–∫–∞—Ö –Ω–∏–∫—Ç–æ –∑–∞ –≤–∞—Å –±—Ä–∞—Ç—å –Ω–µ —Ö–æ—á–µ—Ç, –ø–æ—ç—Ç–æ–º—É —Å–æ—Ä—Ä–∏ü•∫)\n –í –±–µ—Å–µ–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∫–∞–∫ –¥—Ä—É–∑–µ–π, —Ç–∞–∫ –∏ –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É. \n–ê —Ç–∞–∫–∂–µ, –¥–∞–Ω–Ω–∞—è –±–µ—Å–µ–¥–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –æ–±—â–µ–Ω–∏—è, —Ç—É—Å–æ–≤–æ–∫ –∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–µ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è. \n\n–î–ª—è —Ç–µ—Ö –∫—Ç–æ —Ö–æ—á–µ—Ç –≤ –±–µ—Å–µ–¥—É –ø—Ä–æ—Å—å–±–∞, –ø–∏—à–∏—Ç–µ üíå –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–æ–≥–æ –ø–æ–ø–∞–¥–∞—é—Ç—Å—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç –≤ –±–µ—Å–µ–¥—É –∏ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –ª–∞–π–∫–Ω—É–ª, –∏ —è –∑—Ä—è —Ç—Ä–∞—á—É –∏ –∏—Ö –∏ —Å–≤–æ—ë –≤—Ä–µ–º—è.";
        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage4() {

        String text = "–ë–æ—Ä—è, 18, üìç500 –º–µ—Ç—Ä–æ–≤";
        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage5() {

        String text = "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, 21, üìç1–∫–º\n–Ø - —Å–º–µ—à–Ω–æ–π —á–µ–ª–æ–≤–µ–∫.\n–£–º–µ—é –∏–≥—Ä–∞—Ç—å –≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –≤–∏–¥–µ–æ-—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ —Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ—Ä–∏–∞–ª—ã.\n–î–æ—É—á–∏–≤–∞—é—Å—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∫—É—Ä—Å–µ –∏ —Ä–∞–±–æ—Ç–∞—é –∑–≤—É–∫–æ—Ä–µ–∂–∏—Å—Å—ë—Ä–æ–º –≤ —Ç–µ–∞—Ç—Ä–µ.\n–°–æ—Å—Ç–æ—é –≤ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö (–¥–∞, –æ–Ω–∞ –≤ –∫—É—Ä—Å–µ).\n–¢–∞–∫—Ç–∏–ª—å–Ω—ã–π, –ø–æ–ª–∏–∞–º–æ—Ä–Ω—ã–π –≤—ã–±–ª—è–¥–æ–∫.\n–†–æ—Å—Ç 187, –µ—Å–ª–∏ —ç—Ç–æ –≤–∞–∂–Ω–æ.\n–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –≤–∏–¥–µ–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ? –≠—Ç–æ —è –∏—Ö –∏–∑–æ–±—Ä—ë–ª.\n–Ø –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ–≤–µ—Ä—à–∞–ª –≤–æ–µ–Ω–Ω—ã–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –ö–æ—Å–æ–≤–æ, —á–µ—Å—Ç–Ω–æ.\n–ò—â—É —á–µ–ª–æ–≤–µ–∫–∞.";
        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage6() {

        String text = "–°–µ—Ä–≥–µ–π, 21, üìç1–∫–º\n–û–±—â–µ–Ω–∏–µ";
        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage7() {

        String text = "–î–µ–Ω–∏—Å, 21, üìç1–∫–º\nI am not persistent, I am goal-oriented.";
        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";

        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage8() {

        String text = "–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\nKemran, 20, üìç2–∫–º";
        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"–∂–∞–ª–æ–±–∞\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"default\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";
        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    public void testGetStartMessage9() {

        String text = "–£–∂–µ –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ :(\n\n1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.\n2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞.\n3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å.\n***\n4. ‚úàÔ∏è –ë–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –î–∞–π–≤–∏–Ω—á–∏–∫ –≤ Telegram.";
        String buttonsData = "[{\"action\":{\"label\":\"1\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"2\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"default\"}, {\"action\":{\"label\":\"3\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"default\"}, {\"action\":{\"label\":\"‚úàÔ∏è 4\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";
        try {

            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
            });
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            instance.setInformer(informer);
            String result = instance.getStartMessage(text, buttons);
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
//    @Test
//    public void testGetStartMessage4() {
//
//        String text = "–ë–æ—Ä—è, 18, üìç500 –º–µ—Ç—Ä–æ–≤";
//        String buttonsData = "[{\"action\":{\"label\":\"‚ù§Ô∏è\",\"payload\":\"1\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üíå\",\"payload\":\"2\",\"type\":\"text\"},\"color\":\"positive\"}, {\"action\":{\"label\":\"üëé\",\"payload\":\"3\",\"type\":\"text\"},\"color\":\"negative\"}, {\"action\":{\"label\":\"üí§\",\"payload\":\"4\",\"type\":\"text\"},\"color\":\"default\"}]";
//
//        try {
//
//            List<Button> buttons = mapper.readValue(buttonsData, new TypeReference<List<Button>>() {
//            });
//            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
//            instance.setInformer(informer);
//            String result = instance.getStartMessage(text, buttons);
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }

    @Test
    @DisplayName("profile response get answer test")
    public void testGetAnswerProfile() {

        String responseContent = "{\n"
                + "	\"ts\": 1684646178,\n"
                + "	\"updates\": [\n"
                + "		[\n"
                + "			3,\n"
                + "			1628376,\n"
                + "			1,\n"
                + "			-91050183\n"
                + "		],\n"
                + "		[\n"
                + "			7,\n"
                + "			-91050183,\n"
                + "			1628376,\n"
                + "			0\n"
                + "		],\n"
                + "		[\n"
                + "			4,\n"
                + "			1628377,\n"
                + "			1,\n"
                + "			-91050183,\n"
                + "			1672316909,\n"
                + "			\"Victoria, 21, –ú–∞–ª–æ—è—Ä–æ—Å–ª–∞–≤–µ—Ü<br>–°–µ–∫—Ä–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\",\n"
                + "			{\n"
                + "				\"content_source\": \"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNjY2NDgwMzM4XzQ1NzI0Nzc0OQ==\",\n"
                + "				\"title\": \" ... \",\n"
                + "				\"keyboard\": {\n"
                + "					\"one_time\": false,\n"
                + "					\"buttons\": [\n"
                + "						[\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"1\",\n"
                + "									\"label\": \"??\"\n"
                + "								},\n"
                + "								\"color\": \"positive\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"2\",\n"
                + "									\"label\": \"?\"\n"
                + "								},\n"
                + "								\"color\": \"positive\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"3\",\n"
                + "									\"label\": \"?\"\n"
                + "								},\n"
                + "								\"color\": \"negative\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"4\",\n"
                + "									\"label\": \"?\"\n"
                + "								},\n"
                + "								\"color\": \"default\"\n"
                + "							}\n"
                + "						]\n"
                + "					]\n"
                + "				}\n"
                + "			},\n"
                + "			{\n"
                + "				\"attach1_type\": \"photo\",\n"
                + "				\"attach1\": \"519324877_457239545\"\n"
                + "			}\n"
                + "		],\n"
                + "		[\n"
                + "			80,\n"
                + "			12,\n"
                + "			0\n"
                + "		],\n"
                + "		[\n"
                + "			52,\n"
                + "			11,\n"
                + "			-91050183,\n"
                + "			0\n"
                + "		]\n"
                + "	]\n"
                + "}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("profile2 response get answer test")
    public void testGetAnswerprofile2() {

        String responseContent = "{\"ts\":1824067397,\"updates\":[[4,1631328,3,-91050183,1673513238,\"3\",{\"title\":\" ... \"},{}],[3,1631328,1,-91050183],[7,-91050183,1631328,0],[4,1631329,1,-91050183,1673513238,\"–°–æ–ª–Ω—ã—à–∫–æ??, 22, –ö–∞–ª—É–≥–∞<br>–†–æ—Å—Ç 158?\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTY3Mjk4NjA2XzQ1NzI4NDA2MQ==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457240910\"}],[80,8,0],[52,11,-91050183,0],[3,1631329,1,-91050183],[6,-91050183,1631329,0],[80,7,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("profile3 response get answer test")
    public void testGetAnswerprofile3() {

        String responseContent = "{\"ts\":1824067397,\"updates\":[[4,1631328,3,-91050183,1673513238,\"3\",{\"title\":\" ... \"},{}],[3,1631328,1,-91050183],[7,-91050183,1631328,0],[4,1631329,1,-91050183,1673513238,\"–ë–æ—Ä—è, 18, üìç500 –º–µ—Ç—Ä–æ–≤\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTY3Mjk4NjA2XzQ1NzI4NDA2MQ==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457240910\"}],[80,8,0],[52,11,-91050183,0],[3,1631329,1,-91050183],[6,-91050183,1631329,0],[80,7,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("need subscription response get answer test")
    public void testGetAnswer2() {

        String responseContent = "{\"ts\":1661082387,\"updates\":[[3,1628977,1,-91050183],[7,-91050183,1628977,0],[4,1628978,1,-91050183,1672641002,\"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –î–∞–π–≤–∏–Ω—á–∏–∫–∞ ? [club91050183|@dayvinchik].\",{\"emoji\":\"1\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"–í–æ–∑–º–æ–∂–Ω–æ –ø–æ–∑–∂–µ\"},\"color\":\"default\"}]]}},{}],[80,11,0],[52,11,-91050183,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("2", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("empty account response get answer test")
    public void testGetAnswer3() {

        String responseContent = "{\n"
                + "	\"ts\": 1684646243,\n"
                + "	\"updates\": [\n"
                + "		[\n"
                + "			3,\n"
                + "			1628391,\n"
                + "			1,\n"
                + "			-91050183\n"
                + "		],\n"
                + "		[\n"
                + "			7,\n"
                + "			-91050183,\n"
                + "			1628391,\n"
                + "			0\n"
                + "		],\n"
                + "		[\n"
                + "			4,\n"
                + "			1628392,\n"
                + "			1,\n"
                + "			-91050183,\n"
                + "			1672322219,\n"
                + "			\"–í —Ç–≤–æ–µ–π –∞–Ω–∫–µ—Ç–µ —Å–æ–≤—Å–µ–º –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ –∏—â–µ—à—å, –º—ã —Å–º–æ–∂–µ–º –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –ø–∞—Ä—É.<br><br>1. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –ø—É—Å—Ç—ã–º.<br>2. –ù–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É.\",\n"
                + "			{\n"
                + "				\"title\": \" ... \",\n"
                + "				\"keyboard\": {\n"
                + "					\"one_time\": false,\n"
                + "					\"buttons\": [\n"
                + "						[\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"1\",\n"
                + "									\"label\": \"1\"\n"
                + "								},\n"
                + "								\"color\": \"default\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"2\",\n"
                + "									\"label\": \"2\"\n"
                + "								},\n"
                + "								\"color\": \"default\"\n"
                + "							}\n"
                + "						]\n"
                + "					]\n"
                + "				}\n"
                + "			},\n"
                + "			{}\n"
                + "		],\n"
                + "		[\n"
                + "			80,\n"
                + "			12,\n"
                + "			0\n"
                + "		],\n"
                + "		[\n"
                + "			52,\n"
                + "			11,\n"
                + "			-91050183,\n"
                + "			0\n"
                + "		]\n"
                + "	]\n"
                + "}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("mutual like response get answer test")
    public void testGetAnswer4() {

        String responseContent = "{\n"
                + "	\"ts\": 1732150034,\n"
                + "	\"updates\": [\n"
                + "		[\n"
                + "			3,\n"
                + "			1629055,\n"
                + "			1,\n"
                + "			-91050183\n"
                + "		],\n"
                + "		[\n"
                + "			7,\n"
                + "			-91050183,\n"
                + "			1629055,\n"
                + "			0\n"
                + "		],\n"
                + "		[\n"
                + "			4,\n"
                + "			1629056,\n"
                + "			1,\n"
                + "			-91050183,\n"
                + "			1672750548,\n"
                + "			\"–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –î–æ–±–∞–≤–ª—è–π –≤ –¥—Ä—É–∑—å—è - vk.com/id386179098<br><br>–ú–∞—Ä—Ñ–∞, 23, –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å<br>–ò–º—è –Ω–∞—Å—Ç–æ—è—â–µ–µ, –æ—Ç—á–µ—Å—Ç–≤–æ —Ç–æ–∂–µ)<br>–ú–Ω–µ 19 –ª–µ—Ç, —è –∂–∏–≤—É –≤ –≥–æ—Ä–æ–¥–µ –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª–µ. –£ –º–µ–Ω—è —Å—Ä–µ–¥–Ω–µ–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ+–∫—É—Ä—Å—ã 1–° –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è, —Ä–µ—à–∞—é –≤–æ–ø—Ä–æ—Å —Å —Ä–∞–±–æ—Ç–æ–π. <br> –° –¥–µ—Ç—Å—Ç–≤–∞ —Ö—Ä–æ–º–∞—é –Ω–∞ –æ–¥–Ω—É –Ω–æ–≥—É, –¥–µ—Ç—Å–∫–∞—è —Ç—Ä–∞–≤–º–∞, —ç—Ç–æ –≤–∏–¥–Ω–æ. <br>–ò–≥—Ä–∞—é –Ω–∞ —Ñ–æ—Ä—Ç–µ–ø—å—è–Ω–æ, –ª—é–±–ª—é —á–∏—Ç–∞—Ç—å, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω. –õ—é–±–ª—é –≥–æ—Ç–æ–≤–∏—Ç—å)<br>–õ—é–±–ª—é –≥—É–ª—è—Ç—å –∫–æ–≥–¥–∞ –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –≤—Ä–µ–º—è))) –õ—é–±–ª—é –±–µ—Å–µ–¥–æ–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã)\",\n"
                + "			{\n"
                + "				\"content_source\": \"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvMzg2MTc5MDk4XzQ1NzI4ODUwOQ==\",\n"
                + "				\"title\": \" ... \"\n"
                + "			},\n"
                + "			{\n"
                + "				\"attach1_type\": \"photo\",\n"
                + "				\"attach1\": \"519324877_457239856\"\n"
                + "			}\n"
                + "		],\n"
                + "		[\n"
                + "			80,\n"
                + "			11,\n"
                + "			0\n"
                + "		],\n"
                + "		[\n"
                + "			4,\n"
                + "			1629057,\n"
                + "			1,\n"
                + "			-91050183,\n"
                + "			1672750548,\n"
                + "			\"1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã.<br>2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞.<br>3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å.<br>***<br>4. ‚úàÔ∏è –ë–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –î–∞–π–≤–∏–Ω—á–∏–∫ –≤ Telegram.\",\n"
                + "			{\n"
                + "				\"emoji\": \"1\",\n"
                + "				\"title\": \" ... \",\n"
                + "				\"keyboard\": {\n"
                + "					\"one_time\": false,\n"
                + "					\"buttons\": [\n"
                + "						[\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"1\",\n"
                + "									\"label\": \"1\"\n"
                + "								},\n"
                + "								\"color\": \"positive\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"2\",\n"
                + "									\"label\": \"2\"\n"
                + "								},\n"
                + "								\"color\": \"default\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"3\",\n"
                + "									\"label\": \"3\"\n"
                + "								},\n"
                + "								\"color\": \"default\"\n"
                + "							},\n"
                + "							{\n"
                + "								\"action\": {\n"
                + "									\"type\": \"text\",\n"
                + "									\"payload\": \"4\",\n"
                + "									\"label\": \"‚úàÔ∏è 4\"\n"
                + "								},\n"
                + "								\"color\": \"default\"\n"
                + "							}\n"
                + "						]\n"
                + "					]\n"
                + "				}\n"
                + "			},\n"
                + "			{}\n"
                + "		],\n"
                + "		[\n"
                + "			52,\n"
                + "			11,\n"
                + "			-91050183,\n"
                + "			0\n"
                + "		]\n"
                + "	]\n"
                + "}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("Location response get answer test")
    public void testGetAnswerLocation() {

        String responseContent = "{\n"
                + "	\"ts\": 1732150034,\n"
                + "	\"updates\":[[3,1631570,1,-91050183],[7,-91050183,1631570,0],[4,1631571,1,-91050183,1673596579,\"–í—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç—ã –∏—Å—Ç–µ–∫–ª–æ, –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.<br><br>–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —É–≤–∏–¥–∏—à—å –∫—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—è–¥–æ–º\",{\"title\":\" ... \"},{}],[80,8,0],[52,11,-91050183,0],[3,1631571,1,-91050183],[6,-91050183,1631571,0],[80,7,0]]}";

        //String responseContent = "{\"ts\":1824067397,\"updates\":[[4,1631328,3,-91050183,1673513238,\"3\",{\"title\":\" ... \"},{}],[3,1631328,1,-91050183],[7,-91050183,1631328,0],[4,1631329,1,-91050183,1673513238,\"–°–æ–ª–Ω—ã—à–∫–æ??, 22, –ö–∞–ª—É–≥–∞<br>–†–æ—Å—Ç 158?\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTY3Mjk4NjA2XzQ1NzI4NDA2MQ==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457240910\"}],[80,8,0],[52,11,-91050183,0],[3,1631329,1,-91050183],[6,-91050183,1631329,0],[80,7,0]]}";
        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("Finish with previous message response get answer test")
    public void testGetAnswerFinishWithPreviousMsg() {

        String responseContent = "{\n"
                + "	\"ts\": 1732150034,\n"
                + "	\"updates\": [[3,4188664,1,-91050183],[6,-91050183,4188664,0],[4,4188665,3,-91050183,1673559687,\"3\",{\"title\":\" ... \"},{}],[80,31,0],[3,4188665,1,-91050183],[7,-91050183,4188665,0],[4,4188666,1,-91050183,1673559688,\"–î–∏–∞–Ω–∞, 17, –ú–æ—Å–∫–≤–∞<br>–û–±—â–µ–Ω–∏–µ\",{\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTgwMjM1NTI4XzQ1NzI0ODU1NA==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"527463828_457316006\"}],[80,32,0],[52,11,-91050183,0],[4,4188667,1,-91050183,1673559709,\"–ù–∞—à–ª–∏ –∫–æ–µ-–∫–æ–≥–æ –¥–ª—è —Ç–µ–±—è ;) –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Å –≤–æ–ø—Ä–æ—Å–æ–º –≤—ã—à–µ –∏ —É–≤–∏–¥–∏—à—å –∫—Ç–æ —ç—Ç–æ\",{\"title\":\" ... \"},{}]]}";

        //String responseContent = "{\"ts\":1824067397,\"updates\":[[4,1631328,3,-91050183,1673513238,\"3\",{\"title\":\" ... \"},{}],[3,1631328,1,-91050183],[7,-91050183,1631328,0],[4,1631329,1,-91050183,1673513238,\"–°–æ–ª–Ω—ã—à–∫–æ??, 22, –ö–∞–ª—É–≥–∞<br>–†–æ—Å—Ç 158?\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTY3Mjk4NjA2XzQ1NzI4NDA2MQ==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457240910\"}],[80,8,0],[52,11,-91050183,0],[3,1631329,1,-91050183],[6,-91050183,1631329,0],[80,7,0]]}";
        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName("response get answer test")
    public void testGetAnswer1() {

        String responseContent = "{\n"
                + "	\"ts\": 1732150034,\n"
                + "	\"updates\": [[4,28385,1,-91050183,1673608136,\"–¢—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å 1 —á–µ–ª–æ–≤–µ–∫—É, –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ?\",{\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"üëç\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{}],[52,11,-91050183,0],[3,28385,1,-91050183],[3,28384,1,-91050183],[6,-91050183,28385,0],[80,2,0],[4,28386,19,-91050183,1673608154,\"üëç\",{\"emoji\":\"1\",\"payload\":\"1\",\"title\":\" ... \"},{}],[3,28386,1,-91050183],[7,-91050183,28386,0],[4,28387,1,-91050183,1673608155,\"–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:<br><br>ÿ•ÿ®ÿ±ŸàŸáŸäŸÖ, 19, –ù–æ–≤–æ–º–æ—Å–∫–æ–≤—Å–∫–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ–∫—Ä—É–≥\",{\"content_source\":\"lgECApPOK7Hpic4rsemJzTA9A8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"–∂–∞–ª–æ–±–∞\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"400038024_457241118\"}],[80,3,0],[52,11,-91050183,0],[3,28387,1,-91050183],[6,-91050183,28387,0],[80,2,0]]}";

        //String responseContent = "{\"ts\":1824067397,\"updates\":[[4,1631328,3,-91050183,1673513238,\"3\",{\"title\":\" ... \"},{}],[3,1631328,1,-91050183],[7,-91050183,1631328,0],[4,1631329,1,-91050183,1673513238,\"–°–æ–ª–Ω—ã—à–∫–æ??, 22, –ö–∞–ª—É–≥–∞<br>–†–æ—Å—Ç 158?\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTY3Mjk4NjA2XzQ1NzI4NDA2MQ==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457240910\"}],[80,8,0],[52,11,-91050183,0],[3,1631329,1,-91050183],[6,-91050183,1631329,0],[80,7,0]]}";
        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            //HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

    @Test
    @DisplayName(" response get answer test")
    public void testGetAnswer5() {

        String responseContent = "{\n"
                + "	\"ts\": 1732150034,\n"
                + "	\"updates\": [[3,28461,1,-91050183],[6,-91050183,28461,0],[4,28462,3,-91050183,1673608917,\"1\",{\"title\":\" ... \"},{}],[80,3,0],[3,28462,1,-91050183],[7,-91050183,28462,0],[4,28463,1,-91050183,1673608917,\"Roman, 17, –ú–æ—Å–∫–≤–∞<br>–µ—Å–ª–∏ –µ—Å—Ç—å –ü–ö —Å –º–∞–π–Ω–æ–º –∏ —Ö–∞–º–∞—á–∏,—Ç–æ –≥–æ –∏–≥—Ä–∞—Ç—å<br>+–±—Ä–∞–≤–ª <br>–∫—Ç–æ –ª–∞–π–∫–Ω—É–ª,—Ç–æ—Ç –ø–µ—Ä–≤—ã–π –∏ –ø–∏—à–µ—Ç –∫—Å—Ç–∞\",{\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNDI1Mzg0NzE4XzQ1NzI2MjUyNA==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"400038024_457241152\"}],[80,4,0],[52,11,-91050183,0],[4,28464,1,-91050183,1673608928,\"–ù–∞—à–ª–∏ –∫–æ–µ-–∫–æ–≥–æ –¥–ª—è —Ç–µ–±—è ;) –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Å –≤–æ–ø—Ä–æ—Å–æ–º –≤—ã—à–µ –∏ —É–≤–∏–¥–∏—à—å –∫—Ç–æ —ç—Ç–æ\",{\"title\":\" ... \"},{}]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
    @Test
    @DisplayName("Test 1")
    public void testGetAnswerCase1() {

        String responseContent = "{\"ts\":1742909415,\"updates\":[[3,45222,1,-91050183],[7,-91050183,45222,0],[4,45223,1,-91050183,1673976781,\"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, 15, –ú–æ—Å–∫–≤–∞<br>–ò–∏—Å—É—Å —Å –¥–∏–∞–±–µ—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Ä–∏—Å—É–µ—Ç –ª—é–¥–µ–π –∏ –∏–≥—Ä–∞–µ—Ç –Ω–∞ –≥–∏—Ç–∞—Ä–µ.<br><br>–ï—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –ø—Ä–æ–π—Ç–∏—Å—å —Å –Ω–æ–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –∏ –¥—É—à–µ–≤–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è.<br><br>–ú–µ—Ç—Ä–æ –ë–∞–±—É—à–∫–∏–Ω—Å–∫–∞—è\",{\"content_source\":\"lgECApPOFEyxcc4UTLFxzQ6TA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"400038024_457242237\"}],[80,3,0],[52,11,-91050183,0],[3,45223,1,-91050183],[6,-91050183,45223,0],[80,2,0],[51,8],[52,6,2000000008,421447233],[4,45224,532481,2000000008,1673976794,\"\",{\"source_act\":\"chat_invite_user\",\"source_mid\":\"421447233\",\"from\":\"421447233\"},{}]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }
    
//    @Test
//    @DisplayName("Test 2")
//    public void testGetAnswerCase2() {
//
//        String responseContent = "{\"ts\":1742910073,\"updates\":[[4,45236,532481,2000000008,1673976850,\"\",{\"from\":\"421447233\"},{\"attach1_product_id\":\"1326\",\"attach1_type\":\"sticker\",\"attach1\":\"63557\",\"attach1_kind\":\"animation\",\"attachments\":\"[{\\\"type\\\":\\\"sticker\\\",\\\"sticker\\\":{\\\"images\\\":[{\\\"height\\\":64,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-64\\\",\\\"width\\\":64},{\\\"height\\\":128,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-128\\\",\\\"width\\\":128},{\\\"height\\\":256,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-256\\\",\\\"width\\\":256},{\\\"height\\\":352,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-352\\\",\\\"width\\\":352},{\\\"height\\\":512,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-512\\\",\\\"width\\\":512}],\\\"images_with_background\\\":[{\\\"height\\\":64,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-64b\\\",\\\"width\\\":64},{\\\"height\\\":128,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-128b\\\",\\\"width\\\":128},{\\\"height\\\":256,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-256b\\\",\\\"width\\\":256},{\\\"height\\\":352,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-352b\\\",\\\"width\\\":352},{\\\"height\\\":512,\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/1-63557-512b\\\",\\\"width\\\":512}],\\\"product_id\\\":1326,\\\"sticker_id\\\":63557,\\\"animation_url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/3-63557.json\\\",\\\"animations\\\":[{\\\"type\\\":\\\"light\\\",\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/3-63557.json\\\"},{\\\"type\\\":\\\"dark\\\",\\\"url\\\":\\\"https:\\/\\/vk.com\\/sticker\\/3-63557b.json\\\"}]}}]\",\"attachments_count\":\"1\"}],[62,467700382,8],[4,45237,2629633,2000000008,1673976863,\"‚Ä¶\",{\"from\":\"467700382\",\"mentions\":[421447233],\"marked_users\":[[1,[421447233]]]},{\"reply\":\"{\\\"conversation_message_id\\\":44017}\",\"fwd\":\"0_0\"}],[62,467700382,8],[4,45238,532481,2000000008,1673976867,\"—è –∫—É—à–∞—Ç—å —Ö–æ—á—É\",{\"from\":\"467700382\"},{}]]}";
//
//        try {
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            String result = instance.getAnswerMessage(dto.getUpdates());
//            
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }
    
    @Test
    @DisplayName("Test 3 Someone liked your profile need to like too")
    public void testGetAnswerCase3() {

        String responseContent = "{\"ts\":1742915429,\"updates\":[[4,46461,3,-91050183,1673987374,\"1\",{\"title\":\" ... \"},{}],[3,46461,1,-91050183],[7,-91050183,46461,0],[4,46462,1,-91050183,1673987374,\"–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:<br><br>jayzedoff, 17, –ú–æ—Å–∫–≤–∞<br>—Ç–≤–∏—á: jayzedoff\",{\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNTM5ODg2NzQxXzQ1NzI0NjYwNg==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"–∂–∞–ª–æ–±–∞\"},\"color\":\"default\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"400038024_457242443\"}],[80,3,0],[52,11,-91050183,0],[3,46462,1,-91050183],[6,-91050183,46462,0],[80,2,0]]}";

        try {
            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
            String result = instance.getAnswerMessage(dto.getUpdates());
            
            assertEquals("1", result);

        } catch (JsonProcessingException ex) {
            System.out.println(ExceptionUtil.getFormattedDescription(ex));
            fail(ex.getMessage());
        }

    }

//    @Test
//    @DisplayName(" response get answer test")
//    public void testGetAnswer6() {
//
//        String responseContent = "{\n"
//                + "	\"ts\": 1732150034,\n"
//                + "	\"updates\": [[3,3257,1,-91050183],[6,-91050183,3257,0],[4,3258,3,-91050183,1673645050,\"3\",{\"title\":\" ... \"},{}],[80,0,0],[3,3258,1,-91050183],[7,-91050183,3258,0],[4,3259,1,-91050183,1673645050,\"-, –º–æ—Å–∫–≤–∞<br>—è –ª–∏–∑–∞, –Ω–∞–∑—ã–≤–∞—é—Ç –º–µ—Ñ–µ–¥—Ä–æ–Ω—â–∏—Ü–µ–πü•∂ <br>152 —Ä–æ—Å—Ç–æ–º, –∫—É—á–µ—Ä—è–≤–∞—è, –≥–ª–∞–∑–∞ –∑–µ–ª—ë–Ω—ã–µ –≤—Ä–æ–¥–µ. <br>–ª—é–±–ª—é —Ö–∞–π–ø–µ—Ä–ø–æ–ø, —Å–∫–≤–æ—Ä–µ —Å–∫–≤–æ—Ä–µüë©‚Äçüçº <br>—Å–º–æ—Ç—Ä—é –∏ —Ä–∏—Å—É—é –∞–Ω–∏–º–µ, –¥–æ–≤–æ–ª—å–Ω–æ –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ –æ—Ç–∫—Ä—ã—Ç—ã–π —á–µ–ª–æ–≤–µ–∫, —Ö–æ—á–µ—Ç—Å—è –º–∏–ª–æ–≥–æ –º–∞–ª—å—á–∏–∫–∞, –∞ –≤–æ–æ–±—â–µ —Ö–æ—á–µ—Ç—Å—è –º–∞–ª—å—á–∏–∫–∞ –Ω–∞—Ä–∫–æ–º–∞–Ω–∞ —á—Ç–æ–±—ã —Ö–æ–ª–æ–¥–Ω—ã–º–∏ –≤–µ—á–µ—Ä–∞–º–∏ –º—ã –ª–∞–º–ø–æ–≤–æ –ø–∏–∑–¥–∏–ª–∏—Å—å –≤ –∫–ª—É–±–Ω–æ–º —Ç—É–∞–ª–µ—Ç–µ –∑–∞ –¥–æ–∑—É...—á—Ç–æ –± –æ–Ω –µ–±–∞–ª –º–µ–Ω—è –≤ –º—É—Å–æ—Ä–µ –≤–æ–∑–ª–µ —Ä—ã–Ω–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º—ã –ø—Ä–æ–¥–∞–ª–∏ –º–æ—é –Ω–æ–≥—É —Ä–∞–¥–∏ –¥–æ–∑—ã –≥–µ—Ä–æ–∏–Ω–∞\",{\"emoji\":\"1\",\"content_source\":\"lgEBAsAD2SZodHRwOi8vdmsuY29tL3Bob3RvNDAxODU4NDA2XzQ1NzI4ODYxNw==\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"‚ù§Ô∏è\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"üíå\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"üëé\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"üí§\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"748996382_457240542\"}],[80,1,0],[52,11,-91050183,0],[62,251309954,1],[4,3260,2629633,2000000001,1673645060,\"–°–ø–∏—à—å?\",{\"from\":\"251309954\",\"mentions\":[328310757],\"marked_users\":[[1,[328310757]]]},{\"reply\":\"{\\\"conversation_message_id\\\":482536}\",\"fwd\":\"0_0\"}],[80,2,0]]}";
//
//        try {
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            String result = instance.getAnswerMessage(dto.getUpdates());
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }
//    @Test
//    @DisplayName("No such answer response get answer test")
//    public void testGetAnswer5() {
//      [LPR] {"ts":1867300714,"updates":[[3,1631895,1,-91050183],[7,-91050183,1631895,0],[4,1631896,1,-91050183,1673739308,"–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞",{"title":" ... ","keyboard":{"one_time":false,"buttons":[[{"action":{"type":"text","payload":"1","label":"??"},"color":"positive"},{"action":{"type":"text","payload":"2","label":"?"},"color":"positive"},{"action":{"type":"text","payload":"3","label":"?"},"color":"negative"},{"action":{"type":"text","payload":"4","label":"?"},"color":"default"}]]}},{}],[80,8,0],[52,11,-91050183,0],[3,1631896,1,-91050183],[6,-91050183,1631896,0],[80,7,0]]}
//        String responseContent = "";
//
//        try {
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
//            String result = instance.getAnswerMessage(dto.getUpdates());
//            assertEquals("1", result);
//
//        } catch (JsonProcessingException ex) {
//            System.out.println(ExceptionUtil.getFormattedDescription(ex));
//            fail(ex.getMessage());
//        }
//
//    }
    @Test
    public void testGetFlags() {
        //HandlerImpl instance = new HandlerImpl(null, null, null);
        var flags = instance.getFlags(1);
        assertTrue(flags.size() == 1);
        assertTrue(flags.contains(1));
    }

    @Test
    public void testGetFlags2() {
        //HandlerImpl instance = new HandlerImpl(null, null, null);
        // friend + unread
        var flags = instance.getFlags(33);
        assertTrue(flags.size() == 2);
        assertTrue(flags.contains(1));
        assertTrue(flags.contains(32));
    }

    @Test
    public void testGetFlags3() {
        //HandlerImpl instance = new HandlerImpl(null, null, null);
        var flags = instance.getFlags(512 + 4 + 1 + 32);
        assertTrue(flags.size() == 4);
        assertTrue(flags.contains(512));
        assertTrue(flags.contains(4));
        assertTrue(flags.contains(1));
        assertTrue(flags.contains(32));
    }

    @Test
    public void testGetFlags4() {
        //HandlerImpl instance = new HandlerImpl(null, null, null);
        //not delivered + chat
        var flags = instance.getFlags(262144 + 16);
        assertTrue(flags.size() == 2);
        assertTrue(flags.contains(16));
        assertTrue(flags.contains(262144));
    }

    @Test
    public void testGetFlags5() {
        //HandlerImpl instance = new HandlerImpl(null, null, null);
        var flags = instance.getFlags(0);
        assertTrue(flags.isEmpty());
    }

    @Test
    public void testGenerateMessageLocationCase() {
        //HandlerImpl instance = new HandlerImpl(null, null, null);
        Button b = new Button();
        Action a = new Action();
        a.setLabel("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å");
        a.setPayload("1");
        b.setAction(a);
        List<Button> btns = new ArrayList<>();
        btns.add(b);
        String answer = instance.getStartMessage("–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —É–≤–∏–¥–∏—à—å –∫—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—è–¥–æ–º", btns);
        //System.out.println("answer=" + answer);

    }

//    @Test
//    public void testGetAnswerMessage() {
//        try {
//
//            HandlerImpl instance = new HandlerImpl(new HashSet<>(), null, null);
//            String responseContent = "{\"ts\":1712177712,\"updates\":[[3,1630708,1,-91050183],[6,-91050183,1630708,0],[4,1630709,3,-91050183,1673395507,\"3\",{\"title\":\" ... \"},{}],[80,10,0],[3,1630709,1,-91050183],[7,-91050183,1630709,0],[4,1630710,1,-91050183,1673395508,\"–ú–∞—Ä–∏–Ω–∞, 21, –ø–æ—Å–µ–ª–æ–∫ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ —Ç–∏–ø–∞ –°–µ–ª–µ–Ω–≥–∏–Ω—Å–∫<br>???\",{\"emoji\":\"1\",\"content_source\":\"lgECApPOIg9Puc4iD0+5zTBXA8A=\",\"title\":\" ... \",\"keyboard\":{\"one_time\":false,\"buttons\":[[{\"action\":{\"type\":\"text\",\"payload\":\"1\",\"label\":\"??\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"2\",\"label\":\"?\"},\"color\":\"positive\"},{\"action\":{\"type\":\"text\",\"payload\":\"3\",\"label\":\"?\"},\"color\":\"negative\"},{\"action\":{\"type\":\"text\",\"payload\":\"4\",\"label\":\"?\"},\"color\":\"default\"}]]}},{\"attach1_type\":\"photo\",\"attach1\":\"519324877_457240614\"}],[80,11,0],[52,11,-91050183,0]]}";
//            LongPollServerResponse dto = ResponseParser.parseLonPollRespone(responseContent);
//            String answer = instance.getAnswerMessage(dto.getUpdates());
//            System.out.println("answer=" + answer);
//
//        } catch (JsonProcessingException ex) {
//            Logger.getLogger(HandlerImplTest.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
}
